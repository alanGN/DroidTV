apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.alan_pc.droidtv"
        minSdkVersion 22
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            initWith(buildTypes.debug)
            applicationIdSuffix ".dev"
            buildConfigField "String", "WB_BASE_SERVICE", "\"https://api.themoviedb.org/3/\""
            buildConfigField "String", "WB_BASIC", "\"abf0b71ad522c601767a394d7798bd5b\""
            buildConfigField "String", "WB_CONTENT_TYPE_KEY", "\"Content-Type: \""
            buildConfigField "String", "WB_AUTHORIZATION_KEY", "\"Authorization: \""
            buildConfigField "String", "WB_CONTENT_TYPE_VALUE", "\"application/json\""
        }

        release {
            signingConfig null
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "WB_BASE_SERVICE", "\"https://api.themoviedb.org/3/\""
            buildConfigField "String", "WB_BASIC", "\"abf0b71ad522c601767a394d7798bd5b\""
            buildConfigField "String", "WB_CONTENT_TYPE_KEY", "\"Content-Type: \""
            buildConfigField "String", "WB_AUTHORIZATION_KEY", "\"Authorization: \""
            buildConfigField "String", "WB_CONTENT_TYPE_VALUE", "\"application/json\""
        }
    }
}


kapt {
    generateStubs = true
}

dependencies {

    // DAGGER Dependency injection
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion" // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    //NETWORK
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.retrofitAdapterVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    // Rx
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.rxJavaVersion"

    //Google Libs
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation "com.android.support:appcompat-v7:$rootProject.supportGoogleLib"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportGoogleLib"
    implementation "com.android.support:cardview-v7:$rootProject.supportGoogleLib"
    implementation "com.android.support:design:$rootProject.supportGoogleLib"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation "com.android.support:gridlayout-v7:$rootProject.supportGoogleLib"

    //Image Libs
    implementation 'com.squareup.picasso:picasso:2.71828'

    //Test
    testCompile "org.jetbrains.kotlin:kotlin-test-common:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlin_version"
}
